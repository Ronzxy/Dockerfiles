server {
    listen       80  reuseport;
    listen       443 reuseport http2 ssl; # nginx: 1.9.1+ Linux: 3.9+
    server_name  localhost;

    if ($scheme != https) {
        rewrite ^/(.*)$ https://$server_name/$1 redirect;
        # return  302     https://$host$request_uri;
    }
    
    ssl_certificate     /usr/nginx/cert/localhost/server.pem;
    ssl_certificate_key /usr/nginx/cert/localhost/server.key;
    # openssl dhparam -out /usr/nginx/cert/localhost/server.pem 2048
    ssl_dhparam         /usr/nginx/cert/localhost/server.pem;
    # TLSv1 TLSv1.1 TLSv1.2 已不安全
    ssl_protocols       TLSv1.2 TLSv1.3;
    ssl_ecdh_curve      secp384r1;
    ssl_prefer_server_ciphers on;
    ssl_ciphers         "EECDH+ECDSA+AESGCM EECDH+aRSA+AESGCM EECDH+ECDSA+SHA384 EECDH+ECDSA+SHA256 EECDH+aRSA+SHA384 EECDH+aRSA+SHA256 EECDH+aRSA+RC4 EECDH EDH+aRSA !aNULL !eNULL !LOW !3DES !MD5 !EXP !PSK !SRP !DSS !RC4";
    ssl_session_cache   shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_session_tickets off;
    # 加入 HSTS 告诉浏览器本网站全站加密，并且强制用 HTTPS 访问
    add_header Strict-Transport-Security max-age=63072000;
    # 向HTTP客户端/浏览器指示必须通过HTTPS访问所有资源。
    add_header Content-Security-Policy upgrade-insecure-requests;
    # 仅允许指定域可以访问资源
    add_header Access-Control-Allow-Origin *;
    add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS';
    add_header Access-Control-Allow-Headers 'DNT,X-Mx-ReqToken,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization';
    # 诉浏览器这个网页是否可以放在iFrame内
    # DENY 表示该页面不允许在 frame 中展示，即便是在相同域名的页面中嵌套也不允许。
    # SAMEORIGIN 表示该页面可以在相同域名页面的 frame 中展示。
    # ALLOW-FROM uri 表示该页面可以在指定来源的 frame 中展示。
    add_header X-Frame-Options SAMEORIGIN;
    # 禁止浏览器会调用 MIME-sniffing 来猜测资源的类型
    add_header X-Content-Type-Options nosniff;
    # 开启 XSS 保护
    # 0 禁用 XSS 保护
    # 1 启用 XSS 保护
    # 1; mode=block 启用 XSS 保护，并规定在检查到 XSS 攻击时停止页面渲染
    add_header X-Xss-Protection "1; mode=block";
    
    root   /usr/nginx/html;
    index  index.html index.htm;
        
    charset     utf-8;
    access_log  logs/localhost.log main;
    error_log   logs/localhost.error.log;

    location / {
        try_files $uri $uri/ /index.html;
    }
}
