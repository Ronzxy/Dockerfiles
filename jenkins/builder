#!/bin/bash
#
# 作者：Skygangsta<skygangsta@hotmail.com>
#
# Postgres 编译脚本，仅支持 Alpine Linux 系统

WORK_HOME=$(cd $(dirname "${BASH_SOURCE[0]}") && pwd)
BASE_NAME=$(basename $BASH_SOURCE)

JENKINS_VERSION=2.190.1
JENKINS_VERSION_MAJOR=`printf $JENKINS_VERSION | awk -F '.' '{print $1}'`
JENKINS_VERSION_MINOR=`printf $JENKINS_VERSION | awk -F '.' '{print $2}'`
ALPINE_VERSION=latest-stable

export PATH=/bin:/sbin:/usr/bin:/usr/sbin:/usr/local/bin:/usr/local/sbin:~/bin

function func_help() {
    echo "
Usage:
    ${BASE_NAME} [Command]

Commands:
    image       - Build a docker image
    help        - Show this information
"
}

function func_build_docker_images() {
    echo "Start building docker image..."
    # 修改 Dockerfile 中的版本信息
    if [ -z "${ALPINE_VERSION}" ]; then ALPINE_VERSION=latest-stable; fi

    case ${ALPINE_VERSION} in
        latest-stable)
            sed -i "s|FROM alpine:.*|FROM alpine:${ALPINE_VERSION%-*}|g" ${WORK_HOME}/Dockerfile
        ;;
        *)
            sed -i "s|FROM alpine:.*|FROM alpine:${ALPINE_VERSION}|g" ${WORK_HOME}/Dockerfile
        ;;
    esac

    sed -i "s|ARG ALPINE_VERSION=.*|ARG ALPINE_VERSION=${ALPINE_VERSION}|g" ${WORK_HOME}/Dockerfile
    sed -i "s|ARG JENKINS_VERSION=.*|ARG JENKINS_VERSION=${JENKINS_VERSION}|g" ${WORK_HOME}/Dockerfile

    # 创建 Jenkins 镜像
    docker build -t skygangsta/jenkins:${JENKINS_VERSION} $WORK_HOME
    
    echo "Finished."
}

case "$1" in
    image)
        func_build_docker_images

        exit 0
    ;;
    help)
        func_help
    ;;
    *)
        func_help
        exit 1
    ;;
esac
