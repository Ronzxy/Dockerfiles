#!/bin/bash
#
#  Author: Ron Zhang <ronzxy@mx.aketi.cn>
# Version: v20.05.21.1
#
# MariaDB docker image build script

WORK_HOME=$(cd $(dirname "${BASH_SOURCE[0]}") && pwd)
BASE_NAME=$(basename $BASH_SOURCE)

MARIADB_VERSION=10.4
POSTGRES_VERSION_MAJOR=`printf $MARIADB_VERSION | awk -F '.' '{print $1}'`
POSTGRES_VERSION_MINOR=`printf $MARIADB_VERSION | awk -F '.' '{print $2}'`
ALPINE_VERSION=latest-stable

export PATH=${INSTALL_PREFIX}/bin:/bin:/sbin:/usr/bin:/usr/sbin:/usr/local/bin:/usr/local/sbin:~/bin

function func_help() {
    echo "
Usage:
    ${BASE_NAME} [Command]

Commands:
    image       - Build a docker image
    help        - Show this information
"
}

function func_build_docker_images() {
    # 修改 Dockerfile 中的版本信息
    if [ -z "${ALPINE_VERSION}" ]; then ALPINE_VERSION=latest-stable; fi

    VERSION=`echo ${MARIADB_VERSION} | awk -F '.' '{print $3}'`
    if [ ! -z "${VERSION}" ]; then
        MARIADB_VERSION=${MARIADB_VERSION%.*}
    fi

    MARIADB_ALPINE="10.4-3.11 10.3-3.10 10.2-3.8 10.1-3.7"
    for VERSION in ${MARIADB_ALPINE}
    do
        echo ${VERSION#*-}
        echo ${VERSION%-*}
        if [ "${MARIADB_VERSION}" = ${VERSION%-*} ]; then
            ALPINE_VERSION=${VERSION#*-}
            break
        fi
    done

    if [ "${ALPINE_VERSION}" = "latest-stable" ]; then
        echo "Unsupported mariadb version ${MARIADB_VERSION}"
        exit 1
    fi

    sed -i "s/^FROM alpine:.*$/FROM alpine:${ALPINE_VERSION%-*}/g" ${WORK_HOME}/Dockerfile
    sed -i "s|ARG ALPINE_VERSION=.*|ARG ALPINE_VERSION=${ALPINE_VERSION}|g" ${WORK_HOME}/Dockerfile
    sed -i "s|ARG MARIADB_VERSION=.*|ARG MARIADB_VERSION=${MARIADB_VERSION}|g" ${WORK_HOME}/Dockerfile

    # 创建 Postgres 镜像
    docker build -t docker.ronzxy.com/mariadb:${MARIADB_VERSION} ${WORK_HOME}
    
    echo "Finished."
}

case "$1" in
    image)
        func_build_docker_images

        exit 0
    ;;
    help)
        func_help
    ;;
    *)
        func_help
        exit 1
    ;;
esac
