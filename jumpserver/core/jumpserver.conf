server {
    listen       80  reuseport;
    listen       443 reuseport http2 ssl; # nginx: 1.9.1+ Linux: 3.9+
    server_name  jumpserver.erayun.cn;

    if ($scheme != https) {
        rewrite ^/(.*)$ https://$server_name/$1 redirect;
    }
    
    ssl_certificate     /usr/nginx/cert/server.crt;
    ssl_certificate_key /usr/nginx/cert/server.key;
    ssl_prefer_server_ciphers on;
    # ssl_dhparam         /usr/nginx/cert/server.pem;
    ssl_protocols       TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers         "EECDH+ECDSA+AESGCM EECDH+aRSA+AESGCM EECDH+ECDSA+SHA384 EECDH+ECDSA+SHA256 EECDH+aRSA+SHA384 EECDH+aRSA+SHA256 EECDH+aRSA+RC4 EECDH EDH+aRSA !aNULL !eNULL !LOW !3DES !MD5 !EXP !PSK !SRP !DSS !RC4";
    ssl_session_cache   shared:SSL:10m;
    ssl_session_timeout 10m;
    # 加入 HSTS 告诉浏览器本网站全站加密，并且强制用 HTTPS 访问
    add_header Strict-Transport-Security max-age=63072000;
    # 向HTTP客户端/浏览器指示必须通过HTTPS访问所有资源。
    add_header Content-Security-Policy upgrade-insecure-requests;
    # 诉浏览器这个网页是否可以放在iFrame内
    # DENY 表示该页面不允许在 frame 中展示，即便是在相同域名的页面中嵌套也不允许。
    # SAMEORIGIN 表示该页面可以在相同域名页面的 frame 中展示。
    # ALLOW-FROM uri 表示该页面可以在指定来源的 frame 中展示。
    add_header X-Frame-Options SAMEORIGIN;
    # 禁止浏览器会调用 MIME-sniffing 来猜测资源的类型
    add_header X-Content-Type-Options nosniff;
    # 开启 XSS 保护
    # 0 禁用 XSS 保护
    # 1 启用 XSS 保护
    # 1; mode=block 启用 XSS 保护，并规定在检查到 XSS 攻击时停止页面渲染
    add_header X-Xss-Protection "1; mode=block";

    root   /usr/nginx/html/jumpserver;
    index  index.html index.htm;
        
    charset utf-8;
    access_log /var/log/nginx/jumpserver.log main;
    error_log /var/log/nginx/jumpserver.error.log;

    # 录像及文件上传大小限制
    client_max_body_size 100m;

    location /luna/ {
        try_files $uri / /index.html;
        alias /usr/nginx/html/jumpserver/luna/;
    }

    location ^~ /media/ {
        add_header Content-Encoding gzip;
    }

    location /static/ { }

    location /socket.io/ {
        proxy_pass       http://localhost:5000/socket.io/;
        proxy_buffering off;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        access_log off;
    }

    location ^~ /coco/ {
        proxy_pass       http://localhost:5000/coco/;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        access_log off;
    }

    location /guacamole/ {
        proxy_pass       http://localhost:8081/;
        proxy_buffering off;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $http_connection;
        access_log off;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    location / {
        proxy_pass http://localhost:8080;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    error_page   500 502 503 504  /50x.html;
    location = /50x.html { }

    #location /video/ {
    #    mp4;
    #    mp4_buffer_size     1m;
    #    mp4_max_buffer_size 5m;
    #}

    location ~ \.(jpg|gif|png|js|css|ico|bmp|7z|zip|lzma|gz|bz2|rar)$ {
        access_log  off;
        expires     3d;
    }

    location ~ ^/NginxStatus/ {
        #Nginx 状态监控配置
        stub_status on;
        access_log off;
    }
}
