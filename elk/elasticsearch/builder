#!/bin/bash
#
# 作者：Skygangsta<skygangsta@hotmail.com>
#
# Postgres 编译脚本，仅支持 Alpine Linux 系统

WORK_HOME=$(cd $(dirname "${BASH_SOURCE[0]}") && pwd)
BASE_NAME=$(basename $BASH_SOURCE)

# ENABLE_OPENJDK=false
# JAVA_VERSION=8u231
# JAVA_VERSION_MAJOR=`printf $JAVA_VERSION | awk -F '.' '{print $1}'`
# JAVA_VERSION_MINOR=`printf $JAVA_VERSION | awk -F '.' '{print $2}'`
ELASTICSEARCH_VERSION=7.5.1
ELASTICSEARCH_VERSION_MAJOR=`printf $ELASTICSEARCH_VERSION | awk -F '.' '{print $1}'`
ELASTICSEARCH_VERSION_MINOR=`printf $ELASTICSEARCH_VERSION | awk -F '.' '{print $2}'`
ALPINE_VERSION=latest-stable

export PATH=/bin:/sbin:/usr/bin:/usr/sbin:/usr/local/bin:/usr/local/sbin:~/bin

function func_help() {
    echo "
Usage:
    ${BASE_NAME} [Command]

Commands:
    image       - Build a docker image
    help        - Show this information
"
}

function func_build_docker_images() {
    echo "Start building docker image..."
    
    # 修改 Dockerfile 中的版本信息
    if [ -z "${ALPINE_VERSION}" ]; then ALPINE_VERSION=latest-stable; fi

    sed -i "s/^FROM alpine:.*$/FROM alpine:${ALPINE_VERSION%-*}/g" ${WORK_HOME}/Dockerfile
    sed -i "s|ARG ALPINE_VERSION=.*|ARG ALPINE_VERSION=${ALPINE_VERSION}|g" ${WORK_HOME}/Dockerfile
    sed -i "s|ARG ELASTICSEARCH_VERSION=.*|ARG ELASTICSEARCH_VERSION=${ELASTICSEARCH_VERSION}|g" ${WORK_HOME}/Dockerfile
    
    # 创建 ElasticSearch 镜像
    docker build -t docker.ronzxy.com/elasticsearch:${ELASTICSEARCH_VERSION} $WORK_HOME
    
    echo "Finished."
}

case "$1" in
    image)
        func_build_docker_images

        exit 0
    ;;
    help)
        func_help
    ;;
    *)
        func_help
        exit 1
    ;;
esac
